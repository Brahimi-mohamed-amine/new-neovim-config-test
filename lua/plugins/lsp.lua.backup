-- Lspinfo
return {
  -- Mason
  {
    "mason-org/mason.nvim",
    config = function()
      require("mason").setup()
    end,
  },
  -- Mason + LSP integration
  {
    "mason-org/mason-lspconfig.nvim",
    dependencies = { "mason.nvim" },
    config = function()
      require("mason-lspconfig").setup({
        automatic_enable = {
          "lua_ls",
          "php",
          "intelephense",
          "ast-grep",
          exclude = {
            "alex",
            "efm",
          }
        }
      })
    end
  },
  -- LSP configs
  {
    "neovim/nvim-lspconfig",
    dependencies = {
      'saghen/blink.cmp',
      "folke/lazydev.nvim",
      'nvimdev/lspsaga.nvim',
      "folke/neoconf.nvim",
    },
    config = function()
      require("neoconf").setup({})
      local lspconfig = require('lspconfig')

      -- PHP
      lspconfig.intelephense.setup({})
      lspconfig.phpactor.setup({})

      -- JS / TS / React
      lspconfig.ts_ls.setup({})
      lspconfig.html.setup({})
      lspconfig.cssls.setup({})
      lspconfig.emmet_ls.setup({
        filetypes = { "html", "php", "blade", "css", "javascript", "typescript", "vue" },
      })

      local opts = { silent = true, noremap = true }
      -- vim.keymap.set('n', 'K', vim.lsp.buf.hover, {})
      vim.keymap.set('n', 'gd', vim.lsp.buf.definition, {})
      vim.keymap.set("n", "K", "<cmd>Lspsaga hover_doc<CR>", opts)
      vim.keymap.set("n", "<leader>rn", "<cmd>Lspsaga rename<CR>", opts) -- rename
      vim.keymap.set("n", "<leader>o", "<cmd>Lspsaga outline<CR>", opts) -- outline sidebar
      -- vim.keymap.set("n", "[d", "<cmd>Lspsaga diagnostic_jump_prev<CR>", opts)
      -- vim.keymap.set("n", "]d", "<cmd>Lspsaga diagnostic_jump_next<CR>", opts)
      -- vim.keymap.set("n", "gd", "<cmd>Lspsaga peek_definition<CR>", opts)
      -- vim.keymap.set("n", "gD", "<cmd>Lspsaga goto_definition<CR>", opts)
      -- vim.keymap.set('n', '<leader>ca', vim.lsp.buf.code_action, {})
      -- vim.keymap.set("n", "<leader>ca", "<cmd>Lspsaga code_action<CR>", opts)
    end,
  }
}
